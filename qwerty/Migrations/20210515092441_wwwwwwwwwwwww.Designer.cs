// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using qwerty.Data;

namespace qwerty.Migrations
{
    [DbContext(typeof(qwertyContext))]
    [Migration("20210515092441_wwwwwwwwwwwww")]
    partial class wwwwwwwwwwwww
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("school.models.Class", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bukva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("God_obuchenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("God_sozdania")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kolichestvo_uchenikov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("raspisanieID")
                        .HasColumnType("bigint");

                    b.Property<long?>("sotrudnikiID")
                        .HasColumnType("bigint");

                    b.Property<long?>("studentsID")
                        .HasColumnType("bigint");

                    b.Property<long?>("vidID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("raspisanieID");

                    b.HasIndex("studentsID");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("school.models.Dolznost", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naimenovanie_dolznosti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obazannosty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oklad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trebovania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("sotrudnikiID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("sotrudnikiID");

                    b.ToTable("Dolznost");
                });

            modelBuilder.Entity("school.models.predmet", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naimenovanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opisanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("raspisanieID")
                        .HasColumnType("bigint");

                    b.Property<long?>("sotrudnikiID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("raspisanieID");

                    b.ToTable("predmet");
                });

            modelBuilder.Entity("school.models.raspisanie", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Den_nedeli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vrema_nachala")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Vrema_okonchania")
                        .HasColumnType("datetime2");

                    b.Property<long?>("classID")
                        .HasColumnType("bigint");

                    b.Property<long?>("predmetID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("raspisanie");
                });

            modelBuilder.Entity("school.models.sotrudniki", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ClassID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DolznostID")
                        .HasColumnType("bigint");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("predmetID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("predmetID");

                    b.ToTable("sotrudniki");
                });

            modelBuilder.Entity("school.models.students", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ClassID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data_rozdenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dopolnitelnaya_inf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO_mat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO_ot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("students");
                });

            modelBuilder.Entity("school.models.vid", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClassID")
                        .HasColumnType("bigint");

                    b.Property<string>("Naimenovanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opisanie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.ToTable("Vid");
                });

            modelBuilder.Entity("school.models.Class", b =>
                {
                    b.HasOne("school.models.raspisanie", null)
                        .WithMany("Class")
                        .HasForeignKey("raspisanieID");

                    b.HasOne("school.models.students", null)
                        .WithMany("Class")
                        .HasForeignKey("studentsID");
                });

            modelBuilder.Entity("school.models.Dolznost", b =>
                {
                    b.HasOne("school.models.sotrudniki", null)
                        .WithMany("Dolznost")
                        .HasForeignKey("sotrudnikiID");
                });

            modelBuilder.Entity("school.models.predmet", b =>
                {
                    b.HasOne("school.models.raspisanie", null)
                        .WithMany("predmet")
                        .HasForeignKey("raspisanieID");
                });

            modelBuilder.Entity("school.models.sotrudniki", b =>
                {
                    b.HasOne("school.models.Class", null)
                        .WithMany("sotrudniki")
                        .HasForeignKey("ClassID");

                    b.HasOne("school.models.predmet", null)
                        .WithMany("sotrudniki")
                        .HasForeignKey("predmetID");
                });

            modelBuilder.Entity("school.models.vid", b =>
                {
                    b.HasOne("school.models.Class", null)
                        .WithMany("vid")
                        .HasForeignKey("ClassID");
                });

            modelBuilder.Entity("school.models.Class", b =>
                {
                    b.Navigation("sotrudniki");

                    b.Navigation("vid");
                });

            modelBuilder.Entity("school.models.predmet", b =>
                {
                    b.Navigation("sotrudniki");
                });

            modelBuilder.Entity("school.models.raspisanie", b =>
                {
                    b.Navigation("Class");

                    b.Navigation("predmet");
                });

            modelBuilder.Entity("school.models.sotrudniki", b =>
                {
                    b.Navigation("Dolznost");
                });

            modelBuilder.Entity("school.models.students", b =>
                {
                    b.Navigation("Class");
                });
#pragma warning restore 612, 618
        }
    }
}
